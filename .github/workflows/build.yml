name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Used to cache dependencies with a timeout
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - name: Cache Buildozer global directory
        uses: actions/cache@v2
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - uses: actions/cache@v2
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}


      # clearingup some space to build
      - name: Clearingup some space to build
        run: |
          df -h /
          sudo rm -rf \
            "$AGENT_TOOLSDIRECTORY" \
            /opt/google/chrome \
            /opt/microsoft/msedge \
            /opt/microsoft/powershell \
            /opt/pipx \
            /usr/lib/mono \
            /usr/local/julia* \
            /usr/local/lib/android \
            /usr/local/lib/node_modules \
            /usr/local/share/chromium \
            /usr/local/share/powershell \
            /usr/share/dotnet \
            /usr/share/swift
          df -h /

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y \
            build-essential \
            git \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            libunwind-dev \
            zlib1g-dev
          sudo apt-get install -y \
            libsqlite3-dev \
            sqlite3 \
            bzip2 \
            libbz2-dev \
            zlib1g-dev \
            openssl \
            libgdbm-dev \
            libgdbm-compat-dev \
            liblzma-dev \
            libreadline-dev \
            uuid-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good
          sudo apt-get install -y \
            zip \
            unzip \
            autoconf \
            libtool \
            pkg-config \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev \
            python3-dev \
            libcairo2-dev \
            texlive-full \
            sox \
            xcb \
            cargo \
            automake

      # Set up Java 17 required by Gradle
      - name: Setup Java 17 required by Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # or 'zulu', 'liberica', etc.
          java-version: '17'

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11' #set your python version

      # Install pip dependencies
      - name: Install pip dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython==0.29.33

      # Build with Buildozer
      - name: Build with Buildozer
        id: buildozer
        run: |
           mkdir -p logs && yes | buildozer -v android debug > logs/buildozer_log_cloud.txt 2>&1 && echo "Building done!" || echo "Build failed!"

      # Upload artifacts
      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: logs/*.txt

      # Upload artifacts
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: application
          path: bin/*.apk
